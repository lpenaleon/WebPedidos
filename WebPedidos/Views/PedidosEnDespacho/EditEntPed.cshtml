@model WebPedidos.Models.PedFlete

@{
    ViewBag.Title = "EditEntPed";
}

<h2>Completar el Cierre</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.idPedFlete)

        <div id="myModal" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <div class="form-group">
                    @Html.LabelFor(model => model.idPedido, "idPedido", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("idPedido", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.idPedido, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.idPedido, "idPedido", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <h4> @Html.DisplayFor(model => model.idPedido) </h4>
            </div>
        </div>
       
        <div class="form-group">
            @Html.LabelFor(model => model.idFlete, "idFlete", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idFlete", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idFlete, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idEmpTran, "idEmpTran", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idEmpTran", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idEmpTran, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Obervaciones, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Obervaciones, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Obervaciones, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-sm btn-primary" /> |
                @Html.ActionLink("Volver a la Lista", "Index", new { }, new { @class = "btn btn-sm btn-default" })
            </div>
        </div>
    </div>
}
<div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


